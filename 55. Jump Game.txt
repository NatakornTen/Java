import java.util.Scanner;
import java.util.Arrays;
import java.util.ArrayList;
public class Main {
    public static void main(String[] args) {
        Scanner input = new Scanner(System.in);
        System.out.print("Enter the number of elements in the array: ");
        int n = input.nextInt();
        int[] nums = new int[n];
        for(int i = 0; i < n; i++){
            System.out.print("Enter a number: ");
            int x = input.nextInt();
            nums[i] = x;
        }
        System.out.println("nums = " + Arrays.toString(nums));
        Solution sol = new Solution();
        System.out.println(sol.canJump(nums));
    }
}

class Solution{
    public boolean canJump(int[] nums){
        ArrayList<Pair> possibility = new ArrayList<>();
        possibility.add(new Pair(0,nums[0]));
        while(true){
            //check
            int cntForZero = 0;
            for(int i = 0; i < possibility.size(); i++){
                if((possibility.get(i)).getIndex() == nums.length - 1){
                    return true;
                }
                else if((possibility.get(i)).getValue() == 0){
                    cntForZero++;
                }
            }
            if(cntForZero == possibility.size()){
                return false;
            }
            for(int i = 0; i < possibility.size(); i++){
                if((possibility.get(i)).getValue() > 0){
                    for(int j = 1; j <= (possibility.get(i)).getValue(); j++){
                        //ใส่ตัวใหม่แล้วเอาตัวเก่าออก
                        if((possibility.get(i)).getIndex() + j < nums.length){
                        possibility.add(new Pair((possibility.get(i)).getIndex() + j,nums[(possibility.get(i)).getIndex() + j]));
                        }
                    }
                    possibility.remove(i);
                }
            }
        }
    }
}

class Pair{
    private int index;
    private int value;
    public Pair(int i, int v){
        index = i;
        value = v;
    }
    public int getIndex(){
        return index;
    }
    public int getValue(){
        return value;
    }
}